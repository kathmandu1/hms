version: '3.8'

services:
    web:
        image: nginx:stable-alpine
        volumes:
            - ./:/var/www/html:cached
            - .docker/nginx/vhost.conf:/etc/nginx/conf.d/default.conf
            - .docker/nginx/nginx.conf:/etc/nginx/nginx.conf
        links:
            - app
        ports:
            # - "80:80"
             - "${APP_PORT}:80"
        # extra_hosts:
        #     - "host.docker.internal:host-gateway"
        restart: unless-stopped
        networks:
            - merodiscount
    app:
        deploy:
          replicas: 3
        build:
            context: .
            args:
                user: php
                uid: 1000
            dockerfile: develop.Dockerfile
        volumes:
            - ./:/var/www/html:cached
            - ./tests/coverage:/opt/phpstorm-coverage
            - .docker/php/php_settings.ini:/usr/local/etc/php/conf.d/99-override.ini
            - .docker/php/xdebug.ini:/usr/local/etc/php/conf.d/20-xdebug.ini
        restart: unless-stopped
        # ports:
        #     - "6001:6001"
        # command: ['php', 'artisan', 'migrate']
        networks:
            - merodiscount
    mail:
        image: maildev/maildev
        ports:
            - "1025:1025"
            - "9002:1080"
        restart: unless-stopped
        networks:
            - merodiscount
    npm:
        image: node:alpine
        container_name: npm
        volumes:
            - ./:/var/www/html
            - .env:/var/www/html/.env
        ports:
            - 3000:3000
            - 3001:3001
        working_dir: /var/www/html
        profiles: [ "npm" ]
        entrypoint: [ 'npm' ]
        networks:
            - merodiscount


     ### websockets ##########################################
    websockets:
        build:
            context: ./websockets
            args:
                - PUID=${HOST_PUID}
                - PGID=${HOST_PGID}
                - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        restart: unless-stopped
        volumes:
        # - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
            - ./:/var/www/html
        # command: ["php", "artisan", "websockets:serve"]
        # expose:
        #     - "6001"
        ports:
         - "6001:6001"
        depends_on:
            - app
        networks:
        - merodiscount

    queue:
        build:
            context: ./worker
            args:
                - PUID=${HOST_PUID}
                - PGID=${HOST_PGID}
                - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        restart: unless-stopped
        depends_on:
            - app
        volumes:
            - .:/var/www/html
        environment:
            APP_ENV: local
            CONTAINER_ROLE: queue
            # CACHE_DRIVER: redis
            # SESSION_DRIVER: redis
            # QUEUE_DRIVER: redis
            # REDIS_HOST: redis
        networks:
            - merodiscount

    cron:
        build:
            context: .
            dockerfile: cron.dockerfile
        container_name: cron
        volumes:
            - .:/var/www/html
        networks:
            - merodiscount


networks:
    merodiscount:
        driver: bridge

volumes:
    mysql-data:
