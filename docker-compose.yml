version: '3.8'

services:
    web:
        image: nginx:stable-alpine
        volumes:
            - ./:/var/www/html:cached
            - .docker/nginx/vhost.conf:/etc/nginx/conf.d/default.conf
            - .docker/nginx/nginx.conf:/etc/nginx/nginx.conf
        links:
            - app
        ports:
            # - "80:80"
             - "${APP_PORT}:80"
        # extra_hosts:
        #     - "host.docker.internal:host-gateway"
        restart: unless-stopped
        networks:
            - merodiscount
    app:
        build:
            context: .
            args:
                user: php
                uid: 1000
            dockerfile: develop.Dockerfile
        volumes:
            - ./:/var/www/html:cached
            - ./tests/coverage:/opt/phpstorm-coverage
            - .docker/php/php_settings.ini:/usr/local/etc/php/conf.d/99-override.ini
            - .docker/php/xdebug.ini:/usr/local/etc/php/conf.d/20-xdebug.ini
        # links:
        #     - db
            # - websockets
            # - postgress
        restart: unless-stopped
        # ports:
        #     - "6001:6001"
        # command: ['php', 'artisan', 'migrate']
        networks:
            - merodiscount

    db:
        image: mysql:8.0
        command: --init-file /usr/local/etc/mysql/init.sql
        volumes:
            - mysql-data:/var/lib/mysql
            - .docker/mysql/conf.d:/etc/mysql/conf.d
            - .docker/mysql/init/init.sql:/usr/local/etc/mysql/init.sql
        environment:
            MYSQL_ROOT_PASSWORD: '@dmin@123'
            MYSQL_DATABASE: search-task
        restart: unless-stopped
        ports:
            - "9003:3306"
        networks:
            - merodiscount

    # postgress:
    #     image: postgres:13
    #     # container_name: postgres-db
    #     restart: always
    #     environment:
    #         POSTGRES_DB: mero_discount_test
    #         POSTGRES_USER: root
    #         POSTGRES_PASSWORD: '@dmin@123'
    #     ports:
    #         - "5432:5432"
    #     volumes:
    #     - postgressdb_data:/var/lib/postgresql/data
    #     networks:
    #     - merodiscount

    # pgadmin:
    #     image: dpage/pgadmin4
    #     # container_name: pgadmin4_container
    #     restart: always
    #     links:
    #         - postgress
    #     ports:
    #     - "9004:80"
    #     environment:
    #         PGADMIN_DEFAULT_EMAIL: 'santoshghimire112233@gmail.com'
    #         PGADMIN_DEFAULT_PASSWORD: '@dmin@123'
    #     volumes:
    #     - pgadmin-data:/var/lib/pgadmin



    adminer:
        image: adminer
        environment:
            ADMINER_DESIGN: lucas-sandery
            # Replace with your database connection details
            SERVER: ${DB_HOST}  # data ip target database
            PORT: 3306          # Change to the remote database port if different
            USER: ${DB_USERNAME}  # Replace with your database username
            PASSWORD: ${DB_PASSWORD}  # Replace with your database password
        # links:
        #     - db
        ports:
            - "9001:8080"

        restart: unless-stopped
        networks:
            - merodiscount

    mail:
        image: maildev/maildev
        ports:
            - "1025:1025"
            - "9002:1080"
        restart: unless-stopped
        networks:
            - merodiscount

    npm:
        image: node:alpine
        container_name: npm
        volumes:
            - ./:/var/www/html
            - .env:/var/www/html/.env
        ports:
            - 3000:3000
            - 3001:3001
        working_dir: /var/www/html
        profiles: [ "npm" ]
        entrypoint: [ 'npm' ]
        networks:
            - merodiscount

    # queue:
    #     image: laravel-www
    #     container_name: laravel-queue
    #     depends_on:
    #     - app
    #     volumes:
    #     - .:/var/www/html
    #     environment:
    #         APP_ENV: local
        # CONTAINER_ROLE: queue
        # CACHE_DRIVER: redis
        # SESSION_DRIVER: redis
        # QUEUE_DRIVER: redis
        # REDIS_HOST: redis

    # merodiscount-websockets:
    #     image: merodiscount
    #     command: ['php', 'artisan', 'websockets:serve']
    #     # container_name: merodiscount-websockets
    #     restart: unless-stopped
    #     working_dir: /var/www/html
    #     volumes:
    #         - ./:/var/www/html
    #     ports:
    #         - ${LARAVEL_WEBSOCKETS_PORT}:6001
    #     networks:
    #         - merodiscount

    ### redis ###############################################
    # redis:
    #     build:
    #         context : ./redis
    #     restart: unless-stopped
    #     volumes:
    #         - ./redis/volumes/redis:/data
    #     expose:
    #         - "6379"
    #    ports:
    #     - "${REDIS_PORT}:6379"
    #     networks:
    #         - merodiscount

    # redis:
    #     # image: redis:alpine
    #     build:
    #         context : ./redis
    #     restart: unless-stopped
    #     volumes:
    #         - ./docker/volumes/redis:/data
    #     expose:
    #         - "6379"
    #     ports:
    #         - "${REDIS_PORT}:6379"
    #     networks:
    #         - merodiscount

     ### websockets ##########################################
    websockets:
        build:
            context: ./websockets
            args:
                - PUID=${HOST_PUID}
                - PGID=${HOST_PGID}
                - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        restart: unless-stopped
        volumes:
        # - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
            - ./:/var/www/html
        # command: ["php", "artisan", "websockets:serve"]
        # expose:
        #     - "6001"
        ports:
         - "6001:6001"
        depends_on:
            - app
        networks:
        - merodiscount

    queue:
        build:
            context: ./worker
            args:
                - PUID=${HOST_PUID}
                - PGID=${HOST_PGID}
                - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        restart: unless-stopped
        depends_on:
            - app
        volumes:
            - .:/var/www/html
        environment:
            APP_ENV: local
            CONTAINER_ROLE: queue
            # CACHE_DRIVER: redis
            # SESSION_DRIVER: redis
            # QUEUE_DRIVER: redis
            # REDIS_HOST: redis
        networks:
            - merodiscount

    # cron:
    #     build:
    #         context: .
    #         dockerfile: cron.dockerfile
    #     container_name: cron
    #     volumes:
    #         - .:/var/www/html
    #     networks:
    #         - merodiscount

    # rabbitmq:
    # # image: rabbitmq:3-management-alpine  # Replace with your custom image if applicable
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    # ports:
    #   - "5672:5672"  # AMQP port
    #   - "15672:15672"  # Management UI port
    # volumes:
    #   - rabbitmq-data:/var/lib/rabbitmq  # Persistent storage for RabbitMQ data
    # networks:
    #   - rabitmy-network

networks:
    merodiscount:
        driver: bridge

volumes:
    mysql-data:
    postgressdb_data:
    pgadmin-data:
